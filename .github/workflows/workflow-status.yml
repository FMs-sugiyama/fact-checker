name: Deployment Status Dashboard

on:
  workflow_dispatch:
  schedule:
    # 毎時実行してステータスを確認
    - cron: '0 * * * *'

permissions:
  contents: read
  actions: read

jobs:
  deployment-status:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Check Deployment Pipeline Status
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "=== 🚀 デプロイメントパイプライン状況ダッシュボード ==="
          echo "実行日時: $(date '+%Y-%m-%d %H:%M:%S')"
          echo ""
          
          # GitHub CLI を使用してワークフロー実行状況を取得
          echo "📊 最新ワークフロー実行状況:"
          echo ""
          
          # Phase 1: Base Infrastructure
          echo "🏗️  Phase 1: Deploy Base Infrastructure"
          gh run list --workflow="infrastructure-base-deploy.yml" --limit=1 --json status,conclusion,createdAt,headBranch \
            --jq '.[] | "   Status: \(.status) | Conclusion: \(.conclusion // "N/A") | Branch: \(.headBranch) | Date: \(.createdAt)"' || echo "   No runs found"
          echo ""
          
          # Phase 2: Docker Build  
          echo "🐳 Phase 2: Docker Build & Deploy"
          gh run list --workflow="docker-build-deploy.yml" --limit=1 --json status,conclusion,createdAt,headBranch \
            --jq '.[] | "   Status: \(.status) | Conclusion: \(.conclusion // "N/A") | Branch: \(.headBranch) | Date: \(.createdAt)"' || echo "   No runs found"
          echo ""
          
          # Phase 3: Application Deploy
          echo "☁️  Phase 3: Deploy Application"
          gh run list --workflow="app-deploy.yml" --limit=1 --json status,conclusion,createdAt,headBranch \
            --jq '.[] | "   Status: \(.status) | Conclusion: \(.conclusion // "N/A") | Branch: \(.headBranch) | Date: \(.createdAt)"' || echo "   No runs found"
          echo ""
          
          echo "=== 🔧 GitHub Actions Variables 設定状況 ==="
          echo "これらの値は GitHub UI (Settings > Secrets and variables > Actions) で確認してください:"
          echo "- ENABLE_BASE_INFRASTRUCTURE"
          echo "- ENABLE_DOCKER_BUILD"  
          echo "- ENABLE_APP_DEPLOY"
          echo "- ENABLE_PRODUCTION_DEPLOY"
          echo ""
          
          echo "=== 📋 次のアクション推奨 ==="
          
          # 最新の各ワークフローの状況をチェック
          BASE_STATUS=$(gh run list --workflow="infrastructure-base-deploy.yml" --limit=1 --json conclusion --jq '.[].conclusion // "not_run"' 2>/dev/null || echo "not_run")
          DOCKER_STATUS=$(gh run list --workflow="docker-build-deploy.yml" --limit=1 --json conclusion --jq '.[].conclusion // "not_run"' 2>/dev/null || echo "not_run")
          APP_STATUS=$(gh run list --workflow="app-deploy.yml" --limit=1 --json conclusion --jq '.[].conclusion // "not_run"' 2>/dev/null || echo "not_run")
          
          if [ "$BASE_STATUS" != "success" ]; then
            echo "1. 🏗️  基盤インフラをデプロイ: ENABLE_BASE_INFRASTRUCTURE=true を設定"
          elif [ "$DOCKER_STATUS" != "success" ]; then
            echo "2. 🐳 Docker イメージをビルド: ENABLE_DOCKER_BUILD=true を設定"
          elif [ "$APP_STATUS" != "success" ]; then
            echo "3. ☁️  アプリケーションをデプロイ: ENABLE_APP_DEPLOY=true を設定"
          else
            echo "🎉 全パイプラインが成功しています！"
          fi
          
          echo ""
          echo "=== 🔗 有用なリンク ==="
          echo "- Terraform Cloud: https://app.terraform.io/app/fact-checker/workspaces/fact-checker-fs"
          echo "- GitHub Actions: https://github.com/${{ github.repository }}/actions"
          echo "- GCP Console: https://console.cloud.google.com/"

  check-resources:
    runs-on: ubuntu-latest
    if: vars.ENABLE_RESOURCE_CHECK == 'true'
    
    steps:
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCLOUD_SERVICE_KEY }}
          project_id: ${{ secrets.PROJECT_ID }}
      
      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
      
      - name: Check Deployed Resources Status
        run: |
          echo "=== 🔍 デプロイ済みリソース状況確認 ==="
          echo ""
          
          # Artifact Registry Repository
          echo "📦 Artifact Registry Repository:"
          if gcloud artifacts repositories describe fact-checker-repo --location=asia-northeast1 >/dev/null 2>&1; then
            echo "   ✅ fact-checker-repo が存在します"
          else
            echo "   ❌ fact-checker-repo が見つかりません"
          fi
          echo ""
          
          # Docker Images
          echo "🐳 Docker Images:"
          gcloud container images list --repository=asia-northeast1-docker.pkg.dev/${{ secrets.PROJECT_ID }}/fact-checker-repo 2>/dev/null | head -10 || echo "   ❌ イメージが見つかりません"
          echo ""
          
          # Cloud Run Services
          echo "☁️  Cloud Run Services:"
          gcloud run services list --region=asia-northeast1 --filter="metadata.name:x-fact-checker" --format="table(metadata.name,status.url,status.conditions.status)" 2>/dev/null || echo "   ❌ サービスが見つかりません"
          echo ""
          
          # Secret Manager
          echo "🔐 Secret Manager:"
          gcloud secrets list --filter="name:prod-* OR name:staging-*" --format="table(name,createTime)" 2>/dev/null | head -5 || echo "   ❌ シークレットが見つかりません"